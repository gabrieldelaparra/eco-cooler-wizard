@page "/"
@using EcoCoolerWizard.Core

<PageTitle>Eco Cooler Wizard</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge">
    
    <div class="d-flex justify-content-center">
        <h1>Eco Cooler Wizard</h1>
    </div>

    <div class="d-flex flex-row flex-grow-0 gap-4 justify-content-center ">
        <div class="d-flex flex-column flex-grow-0 gap-4 py-12">
            <MudNumericField @bind-Value="@WidthValue" Label="Width"/>
            <MudSlider @bind-Value="@WidthValue" Min="5" Max="200" Step="1" Variant="Variant.Filled"/>
        </div>
        <div class="d-flex flex-column flex-grow-0 gap-4 py-12">
            <MudNumericField @bind-Value="@HeightValue" Label="Height"/>
            <MudSlider @bind-Value="@HeightValue" Min="5" Max="200" Step="1" Variant="Variant.Filled"/>
        </div>
    </div>

    <div class="d-flex justify-content-center">
        <p/>
        @MarkupString
    </div>

    <div class="d-flex justify-content-center pa-4">
        Credits: 1)<MudLink href="https://www.youtube.com/watch?v=op_TO0wP4kI">Grey Dhaka</MudLink> 2)<MudLink href="https://www.solarpedia.info/inventos-ecologicos-caseros/eco-conkoler-aire-acondicionado-con-botellas-de-plastico/">Solarpedia</MudLink> 3)<MudLink href="https://inhabitat.com/this-amazing-bangladeshi-air-cooler-is-mnkade-from-plastic-bottles-and-uses-no-electricity/">Inhabitat</MudLink>
    </div>

    <div class="d-flex justify-content-center pa-12">
        <h3>How it should look</h3>
    </div>

</MudContainer>

<div class="d-flex flex-row flex-grow-0 gap-4 justify-content-center py-8">
    <MudImage Src="images/EcoCooler8.jpg" Alt="Render" Class="rounded-lg"/>
    <MudImage Src="images/EcoCooler9.png" Alt="Sample" Class="rounded-lg"/>
</div>


@code{

    MarkupString MarkupString => (MarkupString) _svg;
    string _svg = "";
    private double _widthValue = 31;
    private double _heightValue = 36;

    protected override void OnInitialized()
    {
        CreateSvg();
        base.OnInitialized();
    }

    private double WidthValue
    {
        get => _widthValue;
        set {
            _widthValue = value;
            CreateSvg();
        }
    }
    private double HeightValue
    {
        get => _heightValue;
        set {
            _heightValue = value;
            CreateSvg();
        }
    }

    private void CreateSvg()
    {
        var generator = new CoolerGeneratorInches();
        var cooler = generator.GenerateCooler(WidthValue, HeightValue);
        var drawer = new CoolerDrawer();
        var actual = drawer.Draw(cooler);

        _svg = drawer.GetMarkupString(actual);

        StateHasChanged();
    }

}